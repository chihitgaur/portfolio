"""
Django settings for myportfolio project.

Generated by 'django-admin startproject' using Django 5.2a1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# PROFILE_IMAGE_PATH = os.path.join(f"{BASE_DIR}","static", "images", "profile.jpeg")
PROFILE_IMAGE_PATH = "images/profile.jpeg"
PYTHON_IMAGE_PATH = "images/python.jpeg"
SELENIUM_IMAGE_PATH = "images/selenium.jpeg"
POWERAUTOMATE_IMAGE_PATH = "images/powerautomate.jpeg"
UIPATH_IMAGE_PATH = "images/uipath.jpeg"
POWERPLATFORM_IMAGE_PATH = "images/powerplatform.jpeg"
GENAI_IMAGE_PATH = "images/generativeai.jpeg"
LANGCHAIN_IMAGE_PATH = "images/langchain.jpeg"
BERT_IMAGE_PATH = "images/bertmodel.jpeg"
DJANGO_IMAGE_PATH = "images/django.jpeg"
FLASK_IMAGE_PATH = "images/flask.jpeg"
HTML_IMAGE_PATH = "images/html.jpeg"
TAILWIND_IMAGE_PATH = "images/tailwind.jpeg"
GIT_IMAGE_PATH = "images/git.jpeg"
GITHUB_IMAGE_PATH = "images/github.jpeg"
LINUX_IMAGE_PATH = "images/linuxubuntu.jpeg"
WINDOWS_IMAGE_PATH = "images/windows.jpeg"
DOCKER_IMAGE_PATH = "images/docker.jpeg"
KUBERNETES_IMAGE_PATH = "images/kubernetes.jpeg"
JENKINS_IMAGE_PATH = "images/jenkins.jpeg"
DEVOPS_IMAGE_PATH = "images/devops.jpeg"

PANDAS_IMAGE_PATH = "images/pandas.jpeg"
NUMPY_IMAGE_PATH = "images/numpy.jpeg"
THREADING_IMAGE_PATH = "images/threading.jpeg"
MULTIPROCESSING_IMAGE_PATH = "images/multiprocessing.jpeg"
BEAUTIFULSOUP_IMAGE_PATH = "images/beautifulsoup.jpeg"
TENSORFLOW_IMAGE_PATH = "images/tensorflow.jpeg"
PILLOW_IMAGE_PATH = "images/pillow.jpeg"
POPPLER_IMAGE_PATH = "images/poppler.jpeg"
FITZ_IMAGE_PATH = "images/fitz.jpeg"
POSTMAN_IMAGE_PATH = "images/postman.jpeg"

RPA_RESUME_PATH = "resume/Chihit_Gaur_RPA_Resume.pdf"
QA_RESUME_PATH = "resume/Chihit_Gaur_QA_Resume.pdf"
AI_RESUME_PATH = "resume/Chihit_Gaur_AI_Resume.pdf"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-@q18^(roex9=f&#+1*f^0t@2nt@%bx8fnru$$-=###g@ss(vfu')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = ['chihit-gaur.onrender.com', 'www.chihit-gaur.onrender.com', 'localhost', '127.0.0.1', '*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'portfolio',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myportfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myportfolio.wsgi.application'


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
# Default primary key field type
# https://docs.djangoproject.com/en/dev/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'